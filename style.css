* {
    box-sizing: border-box;
}

/* Basic HTML elements */
html, body {
    background: #333333; 
    color: antiquewhite;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 16px;

    /* https://stackoverflow.com/questions/826782/how-to-disable-text-selection-highlighting */
    /* Disallow text selection */
    -webkit-touch-callout: none; /* iOS Safari */
    -webkit-user-select: none; /* Safari */
     -khtml-user-select: none; /* Konqueror HTML */
       -moz-user-select: none; /* Old versions of Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
            user-select: none; /* Non-prefixed version, currently
                                  supported by Chrome, Edge, Opera and Firefox */
}

h1 {
    font-size: 24px;
    pointer-events: none;;
}

a {
    text-decoration: none;
}

p {
    pointer-events: none;
}

/* Dice Areas */
.area {
    /* display: flex; */
    border: 1px cyan solid;
    margin: 25px;
}

.flex-container {
    display: flex;
    flex-wrap: wrap;
}

.flex-row {
    flex-direction: row;
    flex-wrap: wrap;
}

.flex-column {
    flex-direction: column;
    flex-wrap: wrap;
}

.flex-child {
    flex: 1;
    height: auto;
}

/* .flex-child:before {
    content: '';
    display: block;
    padding-top: 100%;
} */

#play-area {
    width:100%;
    height:100%;
    /* background: black; */
    /* display: flex; */
    /* flex-direction: row; */
    /* flex-wrap: wrap; */
}


#held-area {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    justify-content: space-between;
    background: rgba(0,0,0,0.7);
    width: 15vw;
    min-width: 200px;
    height:100%;
    max-height: 300px;
    padding: 20px;
    border: orange 1px solid;
}

.absolute {
    position: absolute;
}


/* Dice DIVS */
.die {
    background: transparent;
    display: flex;
    height: 50px;
    width: 50px; 
    border: solid 1px gray;
    margin: 10px;
    padding: 5px;
    border-radius: 10%;
    z-index: 1;
    transition: transform 1s ease-out;
    transition: border 0.08s linear;

}

/* .die .face-value {
    color: white;
    font-size: 30px;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    pointer-events: none;
    
} */

.die .point-value {
    color: white;
    font-size: 16px;
    font-style: italic;
    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    pointer-events: none;
    
}

.die:active {
    /* background-color: white; */
    border: 1px red solid;
}

/* .die:hover {
    border: red solid 1px;
} */

.scoring {
    cursor: grab; 
}

.scoring:active {
    background: white;
    cursor: grabbing;
}

.scoring:hover {
    border: 4px solid white;
    transform: rotate(1080deg);
}

.scoring-solo {
    /* background: blue; */
    border: 4px solid blue;
}

.scoring-group {
    /* background: orange; */
    border: 4px solid orange;
}

.scoring-straight {
    /* background: purple; */
    border: 4px solid purple;
}

.no-click {
    pointer-events: none;
}


/* CSS Dice w/ Dots */
/* taken from */
 /* https://betterprogramming.pub/creating-dice-in-flexbox-in-css-a02a5d85e516 */
.dot {
    display: block;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color:white;
    /* pointer-events: none; */
}

.first-face {
    display: flex;
    justify-content: center;
    align-items: center;
  }
/* 
  .dice {
    padding: 4px;
    background-color: tomato;
    width: 104px;
    height: 104px;
    border-radius: 10%;
    margin-right : 10px;
  } */

.second-face {
    display: flex;
    justify-content: space-between;
}
  
  .second-face .dot:nth-of-type(2) {
    align-self: flex-end;
}
  
  .third-face {
    display: flex;
    justify-content: space-between;
}
  
  .third-face .dot:nth-of-type(1) {
    align-self :flex-end;
}
  
  .third-face .dot:nth-of-type(2) {
    align-self :center;
}
    
.fourth-face , .sixth-face, .fifth-face{
    display: flex;
    justify-content: space-between;
}

.fourth-face .column , .sixth-face .column, .fifth-face .column{
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.fifth-face .column:nth-of-type(2) {
    justify-content: center;
}
/* https://betterprogramming.pub/creating-dice-in-flexbox-in-css-a02a5d85e516 */




.translucent {
    filter: blur(10px);
    opacity: 0.35;
}


/* Scoreboard */
.score {
    float: right;
    text-align: right;
}

#score-player {
    color: chartreuse;
    margin: auto 20px;

}

.label-name {
    display: inline;
    padding-left: 5px;
}

#label-name-player {

}

#score-cpu {
    color:red;
    margin: auto 20px;
}

#label-name-cpu {

}

.turn-indicator {
    border-left: 5px solid white;
    /* border-top: 1px solid chartreuse; */
    background-color: black;
}

.scorebar {
    display: block;
    /* flex: 1; */
    width: 100%;
    height: 5px;
    border: 1px gray solid;
    margin: 4px 0;

}

#scorebar-fill-player {
    background: chartreuse;
    width: 40%;
    height: 100%;
    transition: width 0.5s;
}

#scorebar-fill-cpu {
    background: red;
    width: 40%;
    height: 100%;
    transition: width 0.5s;
}

#round {
    font-size:36px;
}

#label-round {
    /* display:block;
    position: absolute;
    bottom: 75px;
    left: 250px; */
}

#message {
    display: block;
    position: absolute;
    top:40%;
    left:0%;
    color:white;
    font-size: 24px;
    text-align: center;
    width: 100%;
}



/* Buttons  */
a.button {
    display: flex;
    align-items: center;
    justify-content: center;
    /* position: absolute; */
    border: 3px orange solid;
    font-size: 20px;
    text-decoration: none;
    color: orange;
    cursor: default;
    text-transform: uppercase;

}

a.button:hover {
    border: 3px white solid;
    color: white;
}

a.button:active {
    background: white;
}


#button-stand {
    width: 15vw;
    min-width: 200px;
    height: 100%;
    font-size: auto;
    font-weight: bold;
    color: chartreuse;
}

#button-roll {

    bottom: 0px;
    width: 200px;
    height: 200px;
    font-size: 30px;
    border-radius: 50%;
}

#button-roll:hover {
    border:8px white solid;
    cursor: pointer;
    background: rgba(255,255,255, 0.35);
    /* filter: blur(2px);
    opacity: 0.35; */
}

.disabled {
    visibility: hidden;
    /* color: gray;
    background: gray;
    pointer-events: none;
    border: gray dashed 1px; */
}

/* Drag & Drop */
.snap-target { 
    width: 90px; 
    height: 90px; 
    border: solid 1px blue; 
}

/* #drag-containment-wrapper {} */
.hover { border: 5px dashed magenta; background: chartreuse;}

.droppable {
    border: solid 2px yellow;
}

/* .droppable:hover,.droppable.hover{
 background-color: rgba(255, 0, 119, 1); */

/* Console colors and styling */
.red {
    color: red;
}

.red-bold {
    color:red;
    font-weight: bold;
}

.bg-red {
    background: red;
    color: white;
}

.bg-green {
    background: chartreuse;
    color: black;
}

.green {
    color: chartreuse;
}

.black {
    color: black;
}

.cyan {
    color: cyan;
}

.gray {
    color: gray;
}

#console-container {
    width: 10vw;
    min-width: 200px;
    height:35vh;
    max-height:250px;
    padding: 10px;
    margin-top:10px;
    overflow-y: scroll;
    border-top: 4px solid gray;
    background: rgba(0,0,0,0.7);
}

#console-container::-webkit-scrollbar {
    width: 1em;
  }

.console-line {
    display: block;
    width: 100%;
    margin:2px;
    font-size: 14px;


}

.border-cyan {
    border: 1px solid cyan;
}


/* Grid */
/* I used https://grid.layoutit.com/ to generate this */
  .grid-container {
    height: 97vh;
    display: grid;
    grid-template-columns: 0.1fr 1.2fr 3.1fr 1.4fr 0.1fr;
    grid-template-rows: 0.1fr 0.9fr 2.9fr 0.5fr 3.2fr 0.1fr;
    gap: 0px 0px;
    grid-template-areas:
      ". . . . ."
      ". scoreboard playArea heldArea ."
      ". . playArea heldArea ."
      ". . playArea roundInfo ."
      ". rollButton playArea console ."
      ". . . . .";
  }
  .scoreboard { 
      grid-area: scoreboard; 
      padding: 10px;
    }
  
  .heldArea { grid-area: heldArea; display: flex; justify-content: center; align-items: center;  }
  
  .roundInfo { grid-area: roundInfo; display: flex; justify-content: center; align-items: center; }
  
  .console { grid-area: console; display: flex; justify-content: center; align-items: center;}
  
  .rollButton { grid-area: rollButton; display: flex; justify-content: center; align-items: center; }
  
  .playArea { grid-area: playArea; }
